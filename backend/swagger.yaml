openapi: 3.0.3
info:
  title: API de Eventos e Usuários
  description: Documentação da API local para gerenciamento de eventos e usuários.
  version: 1.0.0

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Evento:
      type: object
      properties:
        id:
          type: integer
          example: 1
        titulo:
          type: string
          example: Musical Rock
        data_evento:
          type: string
          format: date
          example: 2025-10-15
    Usuario:
      type: object
      properties:
        nome:
          type: string
          example: Bernardo Faccini
        telefone:
          type: string
          example: "+55 11 91234-5678"
        email:
          type: string
          example: bernardo@ifrs.com
        senha:
          type: string
          format: password
          example: "123"

paths:
  /eventos/consultar:
    get:
      summary: Listar todos os eventos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'

  /eventos/registrar:
    post:
      summary: Criar um novo evento
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '201':
          description: Evento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'

  /eventos/{id}:
    delete:
      summary: Excluir um evento pelo ID
      description: Remove um evento existente. Requer token JWT.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do evento a ser excluído
      responses:
        '200':
          description: Evento excluído com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Evento excluído com sucesso
        '404':
          description: Evento não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Evento não encontrado
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Erro ao excluir evento

  /users/register:
    post:
      summary: Criar um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

  /users/auth:
    post:
      summary: Logar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Retorna token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI..."
